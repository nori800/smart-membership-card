# =============================================================================
# Next.js & React プロジェクト用 .gitignore
# =============================================================================

# =====================================================
# Node.js 関連
# =====================================================
# 依存関係 (100MB超えの原因となるファイルを含む)
node_modules/
/.pnp
.pnp.js
.yarn/install-state.gz

# npm/yarn ログファイル
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# =====================================================
# Next.js 関連
# =====================================================
# ビルド成果物
.next/
out/

# Next.js キャッシュ
.next/cache/
.next/static/

# 本番ビルド
build/
dist/

# Next.js 型定義
next-env.d.ts

# =====================================================
# 環境変数・設定ファイル
# =====================================================
# 環境変数ファイル（機密情報を含む）
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env*.local

# 設定ファイル例（gitignoreに含めない場合は個別に指定）
# .env.example

# =====================================================
# テスト関連
# =====================================================
# テストカバレッジ
coverage/
*.lcov
.nyc_output/

# =====================================================
# データベース関連
# =====================================================
# Supabase
.supabase/

# SQLite
*.sqlite
*.sqlite3
*.db

# =====================================================
# エディタ・IDE 関連
# =====================================================
# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# IntelliJ IDEA
.idea/
*.swp
*.swo

# Vim
*~
.*.swp
.*.swo

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =====================================================
# OS 関連
# =====================================================
# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =====================================================
# デプロイ関連
# =====================================================
# Vercel
.vercel
.vercel.json

# Netlify
.netlify/

# =====================================================
# その他の一時ファイル
# =====================================================
# ログファイル
*.log
logs/

# 一時ファイル
*.tmp
*.temp
.tmp/
.temp/

# バックアップファイル
*.bak
*.backup

# 証明書・キーファイル
*.pem
*.key
*.cert
*.crt

# TypeScript
*.tsbuildinfo

# =============================================================================
# 🚨 重要：既にGitに含まれてしまったファイルの対処法
# =============================================================================
#
# もし既に node_modules/ や .next/ などがGitに含まれてしまった場合：
#
# 1. 特定のファイル・フォルダを Git 管理から除外（ファイルは残す）
#    git rm --cached -r node_modules/
#    git rm --cached -r .next/
#    git rm --cached .env.local
#
# 2. 全体的なキャッシュクリア（慎重に実行）
#    git rm --cached -r .
#    git add .
#
# 3. 変更をコミット
#    git commit -m "Fix .gitignore and remove unwanted files"
#
# 4. 強制プッシュ（他の人と共有している場合は注意）
#    git push --force-with-lease
#
# =============================================================================
# 🔧 トラブルシューティング
# =============================================================================
#
# ▼ 100MB超えエラーが出た場合：
# 1. 問題ファイルを確認
#    git ls-files | xargs ls -la | sort -k5 -rn | head -20
#
# 2. Git LFS を使用する場合（大きなファイルを管理）
#    git lfs track "*.node"
#    git lfs track "*.wasm"
#
# 3. 履歴からも削除する場合（BFG Repo-Cleaner 使用）
#    bfg --delete-files "*.node"
#    git reflog expire --expire=now --all
#    git gc --prune=now --aggressive
#
# ============================================================================= 